[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float shake_power;
uniform float shake_rate;
uniform float shake_speed;
uniform float shake_block_size;
uniform float shake_color_rate;

float random( float seed )
{
	return fract(543.2543 * sin(dot(vec2(seed, seed), vec2(3525.46, -54.3415))));
}

void fragment( )
{
	float enable_shift = float(random(trunc(TIME * shake_speed)) < shake_rate);
	vec2 fixed_uv = SCREEN_UV;
	fixed_uv.x += (random((trunc(SCREEN_UV.y * shake_block_size) / shake_block_size) + TIME) - 0.5) * shake_power * enable_shift;
	vec4 pixel_color = textureLod( SCREEN_TEXTURE, fixed_uv, 0.0 );
	pixel_color.r = mix(pixel_color.r,textureLod(SCREEN_TEXTURE, fixed_uv + vec2(shake_color_rate, 0.0), 0.0).r, enable_shift);
	pixel_color.b = mix(pixel_color.b,textureLod(SCREEN_TEXTURE, fixed_uv + vec2(shake_color_rate, 0.0), 0.0).b, enable_shift);
	COLOR = pixel_color;
}
"

[resource]
shader = SubResource( 1 )
shader_param/shake_power = 1.0
shader_param/shake_rate = 0.05
shader_param/shake_speed = 1.0
shader_param/shake_block_size = 4.0
shader_param/shake_color_rate = 0.0
